/*
 * Thrifty
 *
 * Copyright (c) Benjamin Bader
 * Copyright (c) Microsoft Corporation
 *
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * THIS CODE IS PROVIDED ON AN  *AS IS* BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING
 * WITHOUT LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE,
 * FITNESS FOR A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
 *
 * See the Apache Version 2.0 License for specific language governing permissions and limitations under the License.
 */

plugins {
    id 'thrifty-kotlin-module' apply false
    id 'jacoco'
}

tasks.register("codeCoverageReport", JacocoReport) { t ->
    subprojects.each { sp ->
        t.dependsOn sp.tasks.withType(Test)
        t.dependsOn sp.tasks.findAll { it.name == "allTests" } // MPP why are you like this

        def commonMain = sp.file("src/commonMain/kotlin")
        def jvmMain = sp.file("src/jvmMain/kotlin")
        def isMpp = commonMain.exists() || jvmMain.exists()

        if (isMpp) {
            [commonMain, jvmMain].findAll(File::exists).each { d -> t.sourceDirectories.from(d) }
            t.classDirectories.from(sp.fileTree("build/classes/kotlin/jvm/main"))
        } else {
            t.sourceSets sp.sourceSets.main
        }
    }

    t.executionData fileTree(project.rootDir.absolutePath).include('**/build/jacoco/*.exec')
    t.reports {
        xml.required = true
        xml.outputLocation = layout.buildDirectory.file("reports/jacoco/report.xml")
        html.required = true
        csv.required = false
    }

    def filters = ["**/antlr/*", "com/bendb/thrifty/test/gen/*"]
    t.classDirectories.setFrom(files(t.classDirectories.files.collect {
        fileTree(dir: it, exclude: filters)
    }))
}

wrapper {
    gradleVersion = "8.11"
    distributionType = Wrapper.DistributionType.BIN
}
